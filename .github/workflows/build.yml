# Simplified Build workflow using uv and its setup action
# This workflow uses the official `astral-sh/setup-uv` action which
# installs uv, configures Python, and optionally handles uv's cache.

name: Build

on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    name: Build on ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        config:
          - name: 'Windows'
            os: windows-latest
            python-version: '3.8'
            artifact-name: RootPainterInstaller.exe
          - name: 'Ubuntu'
            os: ubuntu-latest
            python-version: '3.10'
            artifact-name: RootPainter.deb
          - name: 'macOS'
            os: macos-latest
            python-version: '3.9.5'
            artifact-name: RootPainter.pkg

    steps:
      - uses: actions/checkout@v4

      - name: Set up uv and Python
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.config.python-version }}
          enable-cache: true

      - name: Sync dependencies with uv
        run: |
          # Install runtime and development dependencies for workspace members
          uv sync --all-packages --group dev

      - name: Build software (PyInstaller)
        working-directory: painter
        run: |
          uv run python scripts/run_pyinstaller.py

      - name: Make installer (macOS)
        if: runner.os == 'macOS'
        run: |
          cd painter
          pkgbuild --component dist/RootPainter.app --install-location /Applications dist/RootPainter.pkg

      - name: Make installer (Linux)
        if: runner.os == 'Linux'
        run: |
          cd painter
          bash scripts/make_deb_file

      - name: Make installer (Windows)
        if: runner.os == 'Windows'
        run: |
          cd painter
          makensis.exe scripts/assets/Installer.nsi

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: Package-${{ matrix.config.name }}
          path: ${{github.workspace}}/painter/dist/${{ matrix.config.artifact-name }}
          if-no-files-found: error
