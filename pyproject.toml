[project]
name = "root-painter"
description = "RootPainter GUI and trainer packaged as a single CLI"
readme = "README.md"
requires-python = ">=3.10,<3.12"
license = "GPL-3.0-or-later"
dependencies = ["root-painter-painter", "typer>=0.16.1"]
version = "0.1.11"

[project.scripts]
root-painter = "root_painter_cli.main:main"

[project.optional-dependencies]
trainer = ["root-painter-trainer-jakob1379"]

[build-system]
requires = ["uv_build>=0.8.14,<0.9.0"]
build-backend = "uv_build"

[dependency-groups]
dev = [
  "mkdocs>=1.6.1",
  "mkdocs-material[imaging]>=9.6.17",
  "poethepoet>=0.37.0",
  "pre-commit>=4.3.0",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true

[tool.uv.sources]
root-painter-painter = { workspace = true }
root-painter-trainer-jakob1379 = { workspace = true }

[tool.uv.workspace]
members = ["painter", "trainer"]

[tool.uv.build-backend]
module-name = "root_painter_cli"

# Poethepoet tasks to orchestrate publishing of workspace members.
# The sequence builds and publishes painter and trainer first; the root package
# is published only if both succeed.
# Set POE_PUBLISH_INDEX to override default index (default: testpypi).

[tool.poe.tasks]
_build_packages = 'uv build --all-packages'
_clean_builds = { shell = "rm -rf painter/dist trainer/dist dist || true" }

[tool.poe.tasks.release]
help = "Clean, build all packages, and publish root after painter and trainer succeed."
sequence = [
  '_clean_builds',
  '_build_packages',
  { shell = "uv publish --index ${POE_PUBLISH_INDEX:-testpypi}" },
]
